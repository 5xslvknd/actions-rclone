name: Rclone_05 W sync to O

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: rclone-install
        run: |
          # 安装 rclone
          curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip
          unzip rclone-current-linux-amd64.zip
          cd rclone-*-linux-amd64
          sudo mv rclone /usr/bin
          sudo chmod +x /usr/bin/rclone
      - name: rclone-config
        env:
          RCLONE_CONFIG: ${{ secrets.RCLONE_CONFIG }}
        run: |
          # 写配置文件
          mkdir -p ~/.config/rclone/
          cat << EOF > ~/.config/rclone/rclone.conf
          $RCLONE_CONFIG
          EOF
      - name: rclone-run
        run: |
          # Rclone-Run
          # 延迟函数
          delay()
          {
          random_time=$(($RANDOM % $1))
          echo "等待 ${random_time} 分钟后开始同步"
          for((i=1;i<=${random_time};i++));  
          do
          echo "倒计时 $[${random_time}-$i] 分钟"
          sleep 1m
          done
          }
          # 随机延迟0~15分钟后再进行操作,可自行设置时间
          delay 1
          # 更改时区
          sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          
          echo "开始同步【A】"
          rclone sync W:/A O:/"00 中转"/ACG/A
          echo "【A】已同步"
          echo "开始同步【B】"
          rclone sync W:/B O:/"00 中转"/ACG/B
          echo "【B】已同步"
          echo "开始同步【C】"
          rclone sync W:/C O:/"00 中转"/ACG/C
          echo "【C】已同步"
          echo "开始同步【D】"
          rclone sync W:/D O:/"00 中转"/ACG/D
          echo "【D】已同步"
          echo "开始同步【E】"
          rclone sync W:/E O:/"00 中转"/ACG/E
          echo "【E】已同步"
          echo "开始同步【F】"
          rclone sync W:/F O:/"00 中转"/ACG/F
          echo "【F】已同步"
          echo "开始同步【G】"
          rclone sync W:/G O:/"00 中转"/ACG/G
          echo "【G】已同步"
          echo "开始同步【H】"
          rclone sync W:/H O:/"00 中转"/ACG/H -v
          echo "【H】已同步"
